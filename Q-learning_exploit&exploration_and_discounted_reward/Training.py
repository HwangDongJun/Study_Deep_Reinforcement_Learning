import gym
import numpy as np

env = gym.make("FrozenLake-v3")
env.render()

Q = np.zeros([env.observation_space.n, env.action_space.n])
num_episodes = 1000
done = False
state = env.reset()
#해당 조건들은 개념설명에 중요한 부분이 아니기 때문에 따로 분리했다.

for i in range(num_episodes):
    e = 1. / ((i // 100) + 1) #e = 0.1 / (i+1)

    while not done:
        new_state, reward, done, _ = env.step(action) #30번째줄을 위한 선언
        if np.random.rand(1) < e:
            action = env.action_space_sample()
        else:
            action = np.argmax(Q[state, :])

    #noise를 추가하는 방법 (위의 방법하고는 다른 방법)
    action = np.argmax(Q[state, :] + np.random.randn(1, env.action_space.n) / (i+1))
    #np.random.randn -> 숫자는 몇개를 생성하냐? 1~4(4개)생성

#Q(s, a) = r + max_a' Q(s', a') 구현
dis = .99 #0.99 / 0.9로 주어도 된다.

Q[state, action] = reward + dis * np.max(Q[new_state,:])